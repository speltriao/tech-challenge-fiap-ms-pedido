name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar

      - name: Get SonarCloud Quality Gate Status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Wait for a short time to ensure SonarCloud analysis is complete
          sleep 30

          # Fetch the project metrics
          PROJECT_KEY="speltriao_tech-challenge-fiap-ms-pedido"
          ORGANIZATION="speltriao"
          
          # Get coverage and warnings
          RESPONSE=$(curl -s -u "$SONAR_TOKEN:" "https://sonarcloud.io/api/measures/component?component=${PROJECT_KEY}&metricKeys=coverage,ncloc,violations")

          # Parse the response
          COVERAGE=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric == "coverage") | .value')
          NCLOC=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric == "ncloc") | .value')
          VIOLATIONS=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric == "violations") | .value')

          # Print the metrics
          echo "Coverage: $COVERAGE%"
          echo "Number of Lines of Code (ncloc): $NCLOC"
          echo "Number of Violations: $VIOLATIONS"